extends layout
    
block content
  
  // Google Maps Mixin to Display Venue Location
  mixin google-map-place(query, key)
    - if ("alt" in attributes)
      - alt = attributes.alt;
      - delete attributes.alt;
    - else
      - alt = true;
    - if (query.length == 27 && query.indexOf(["+"]) < 1)
      - query = "place_id:" + query
    - else
      - query = query.replace(/ /g, "+");
    iframe(src=`https://google.com/maps/embed/v1/place?key=${key}&q=${query}`
           frameborder="0"
           width="90%"
           height="450")&attributes(attributes)
      - if (alt)
        | Your browser does not support iframes.
  - const gMapsKey = "AIzaSyDw04dJQyETFjfsthXJzhvjAiY9XE9Labc";
  
  //- Show Heading if Venue has been Deleted
  if (deleted)
    br
    h1 Venue successfully deleted.
  
  //- Regular Venue Profile
  else
    center
      - const imgURL = "https://studyspot.s3.amazonaws.com/venue/header/" + venue._id.toString() + ".jpg"
      img.venue-header(src = imgURL 
        onerror="this.src='https://studyspot.s3.amazonaws.com/venue/header/default.jpg'")
      
    br
    .row.venue-profile-page
        
      // Main Content Div
      div.col-lg-7.col-md-12.offset-lg-1.venue-info-div
      
        // Basic Information
        div
          h2 #{message}
          h2 #{venue.venueName}
          p #{venue.venueType} | #{venue.venueAddress.venueSuburb}, #{venue.venueAddress.venueState}
        
          p Leave a review (working on this feature!)
          - const id = venue._id
          - const suggestionsPage = '/venueSuggestions/' + id
          p
            a(href=suggestionsPage) Suggest changes

        // Venue Details
        div.venue-details-div
          h3 Details
                      
          table.venue-details-table
              
            // icons
            tr
                
              // type
              td
                if venue.venueType === "Cafe"
                  img.rounded(src="/images/venue/cafe.png", width="50px")
                else if venue.venueType === "Public Library"
                  img.rounded(src="/images/venue/library.png", width="50px")
                else
                  img.rounded(src="/images/venue/other.png", width="50px")
                
              // noise
              td
                if venue.venueDetails.noise === "low"
                  img.rounded(src="/images/venue/low.png", width="40px")
                else if venue.venueDetails.noise === "med"
                  img.rounded(src="/images/venue/med.png", width="40px")
                else
                  img.rounded(src="/images/venue/high.png", width="40px")
                
              // wifi
              td
                if venue.venueDetails.wifi
                  img.rounded(src="/images/venue/wifi.png", width="50px")
                else
                  img.rounded(src="/images/venue/nowifi.png", width="50px")
                
              // toilets
              td
                if venue.venueDetails.toilets
                  img.rounded(src="/images/venue/toilets.png", width="50px")
                else
                  img.rounded(src="/images/venue/notoilets.png", width="50px")
                  
              // powerpoints
              td
                if venue.venueDetails.power
                  img.rounded(src="/images/venue/power.png", width="50px")
                else
                  img.rounded(src="/images/venue/nopower.png", width="50px")
                      
              // discussion-friendly
              td
                if venue.venueDetails.discussionFriendly
                  img.rounded(src="/images/venue/discussion.png", width="50px")
                else
                  img.rounded(src="/images/venue/silence.png", width="50px")
                    
              // printer
              td
                if venue.venueDetails.printer
                  img.rounded(src="/images/venue/printer.png", width="50px")
                else
                  img.rounded(src="/images/venue/noprinter.png", width="50px")
               
            // labels
            tr
              //type
              td #{venue.venueType}  
              //noise
              td #{venue.venueDetails.noise} noise
              //wifi
              if venue.venueDetails.wifi
                td Wifi
              else
                td No wifi
              // toilets
              if venue.venueDetails.toilets
                td Toilets
              else
                td No toilets
              // powerpoints
              if venue.venueDetails.power
                td Powerpoints
              else
                td No powerpoints
              // discussion-friendly
              if venue.venueDetails.discussionFriendly
                td Discussion
                  p friendly
              else
                td Silent 
                  p space
              // printer
              if venue.venueDetails.printer
                td Printing
                  p available
              else
                td No printing 
                  p available
        
        br
        // Reviews
        div.venue-reviews
          h2 Reviews
          
          //- Create New Review
          //- If suggestion already submitted only show message
          if (completed)
            h2.display-4.m-b-2 Successfully submitted your suggestion!
            br
            p The admins will review your suggestions and update our database accordingly.
            
          //- If user is not logged in
          if !(user)
            p Please log in to submit a review.
          
          //- Else, show suggestion form
          else
          
            p Submit a review for <strong>#{venue.venueName} </strong> 
            br
            
            form(method='POST' action='') 
              div.form-group.row
            
                // Display static user name
                label.col-sm-1.col-form-label(for="staticUserName") User:
                div.col-sm-11
            
                  //ADD USER SCHEMA/EMAIL IN BACKEND so can set value = user.EMAIL or username
                  input.form-control-plaintext#staticEmail(type="text" readonly value=user.email) 
                  input.form-control(type="hidden" name='userId' value=user._id) 
            
            
                // Display static venue name
                label.col-sm-1.col-form-label(for="staticVenueName") Venue:
                div.col-sm-11
            
                  input.form-control-plaintext(type="text" readonly value=venue.venueName)
                  input.form-control(type="hidden" name='venueId' value=venue._id)  
            
              // Textbox
              div.form-group.row
                label(for="exampleFormControlTextarea1") Please enter your review here:
                textarea.form-control(rows="3" name="review" placeholder="Please enter review here.")                  
            
              // Submit 
              br
              button.btn.btn-primary(type="submit") Submit

      
      // Side Bar
      div.col-lg-3.col-md-12.venue-side-bar
        
        // Contacts
        if venue.venueContact.phone || venue.venueContact.mobile || venue.venueContact.email || venue.venueContact.web
          br
          h5 Contact Details
          if venue.venueContact.phone
            p phone: #{venue.venueContact.phonePrefix} #{venue.venueContact.phone}
          if venue.venueContact.mobile
            p mobile: #{venue.venueContact.mobilePrefix} #{venue.venueContact.mobile}
          if venue.venueContact.email
            p #{venue.venueContact.email}
          if venue.venueContact.web
            a(href=venue.venueContact.web) #{venue.venueContact.web}
        
        br
        
        // Location
        h5 Location
        
        - const query = venue.venueAddress.venueStreetAddress + ", " + venue.venueAddress.venueSuburb
        +google-map-place(query, gMapsKey)(maptype="roadmap")
        
        p #{venue.venueAddress.venueStreetAddress}, 
          |#{venue.venueAddress.venueSuburb}, #{venue.venueAddress.venueState}, #{venue.venueAddress.venuePostcode}
        
        // Opening hours
        h5 Opening Hours

        - const venueHours = venue.venueHours.toObject()
          each timeframe, day in venueHours
            p= day+ ": " + timeframe
    
    // Venue Update and Delete Buttons (Will be only available to users with admin attribute at later date)
    .row
      .col-md-2.offset-1
        - const updateLink = "/venueUpdate/" + venue._id
        a.btn.btn-Warning(href=updateLink) UPDATE VENUE
      .col-md-2
        - const deletePath = "/deleteVenue/" + venue._id
        form(method="POST" action=deletePath)
          button.btn.btn-Danger(type="Submit") DELETE VENUE
